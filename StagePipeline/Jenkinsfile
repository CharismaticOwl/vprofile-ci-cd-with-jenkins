def COLOR_MAP = [
    'SUCCESS': 'good',
    'FAILURE': 'danger'
]

pipeline {
    agent any
    tools {
        maven "MAVEN"
        jdk "OpenJDK17"
    }

    environment {
        SNAP_REPO = 'vprofile-snapshot'
        NEXUS_USER = 'admin'
        NEXUS_PASS = 'admin'
        RELEASE_REPO = 'vprofile-release'
        CENTRAL_REPO = 'vpro-maven-central'
        NEXUSIP = '13.233.128.225'
        NEXUSPORT = '8081'
        NEXUS_GRP_REPO = 'vpro-maven-group'
        NEXUS_LOGIN = 'nexuslogin'
        SONARSERVER = 'sonarserver'
        SONARSCANNER = 'sonarscanner'
        CODEARTIFACT_AUTH_TOKEN = 'eyJ2ZXIiOjEsImlzdSI6MTcwNjU1NzYyNSwiZW5jIjoiQTEyOEdDTSIsInRhZyI6Ikdhd2dOREYwTGFiODl6dnlvT2xRZVEiLCJleHAiOjE3MDY2MDA4MjUsImFsZyI6IkExMjhHQ01LVyIsIml2IjoiaG00cU10UFNRdlFWa3ptUCJ9.hObj6mSFJtBd0HALjPBKKQ.jFOaFTp8uFWQGema.V6K9zm72cTAILjNC4e2aK333g85jpH9yB0FKIU83bm3xbFBEIpfFhXxWXPIiXke38BT96Xw1pAQZf2ZuJ6Luvc1zioYTwKcgXLP7Q6jDARA0hD1Kl_KF9F3KeWXMd4gMaKYAYEf8RH_PJ-MEgTkBF3BL5n5diSQ3pDvCPxD7NKT5IIfKZw_qb9mIvSksqPmSdDqgaK-f1664h6Zm8eQPNfxaL9-MJRJz4E-HiQZ9kLQdq6F7vcLoSSibPxLk0WMBEmSEwfGruoQftFffTqGh9BkG-x8nUotHppsK4npDEDS80XZVeJt8BnZkIpE46qTjfimfid9uzZp-q7HE0N0O4nr8eDOzqtiu0goqzq61EY19AEz0rObGAnN3xtZEKI2EuiH2LQZFcRhBhuyUp18ube7Wx8sdzLHRMpVNHmraQHBHKiRwFaY5IrpBBwpHnnJG1r9l8__LaacWsbD7HOPPfrBEO5iJDM6zKlCZoG3weH1vLDQ5P4dDUaHuXSn-_s7-AKBrPQVZlYlnlPVdaG6gzTUQBSiJRVurO6Oi6q3OhqUy05JgN1q-p8Oc5Nn0Szuk5o6GDd0vxynydYQBAuqp6vhc5QaOVCF99IE8S5mEyvG93Je8jk52Mk2XFl151LJaJ3Px_DpQGoRbczw9bj8yyhHjcsOpkAKrcDJ31ta5bYRKGsLkUkACZ5MK3vSs964YaYkjmxw82_EAaBfrJxGNLhmQ0pcssdfSHDlppw3tVtWu5UEutL189II86Kr1UDufnNcsqIU6jvKRwJ8ezPmP0zLsz7_dbm2T1Mi6zfPB-gpjcjPnJCXH_nkum9F6gCfgqtDXQQFO4Ll7G6v9JY-RGmm_pD9IDfnT_nY516pDM_LHb4PO8IJyu2AhGjHLReJZ1c6Rjq2VYxK0gOTW5VLbDmmnSQ.elZkSD-hUye90qPgFb1mVQ'
        registryCredential = 'ecr:ap-south-1:awsuser'
        appRegistry = '367065853931.dkr.ecr.ap-south-1.amazonaws.com/vprofileappimg'
        vprofileRegistry = 'https://367065853931.dkr.ecr.ap-south-1.amazonaws.com'

    }

    stages{
        stage('Build'){
            steps {
                sh 'mvn -s settings.xml -DskipTests install'
            }
            post {
                success {
                    echo "Now Archiving."
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }
        stage('Test'){
            steps {
                sh 'mvn test'
            }
        }
        stage('Checkstyle Analysis'){
            steps {
                sh 'mvn checkstyle:checkstyle'
            }
        }
        stage('Sonar Analysis'){
            environment {
                scannerHome = tool "${SONARSCANNER}"
            }
            steps {
                // withSonarQubeEnv("${SONARSERVER}"){
                //         sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                //             -Dsonar.projectName=vprofile-repo \
                //             -Dsonar.projectVersion=1.0 \
                //             -Dsonar.sources=src/ \
                //             -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                //             -Dsonar.junit.reportsPath=target/surefire-reports/ \
                //             -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                //             -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''}
                sh "echo sonar skipped"
                }
            }
        // stage('UploadArtifact'){
        //     steps{
        //         nexusArtifactUploader(
        //             nexusVersion: 'nexus3',
        //             protocol: 'http',
        //             nexusUrl: "${NEXUSIP}:${NEXUSPORT}",
        //             groupId: 'QA',
        //             version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
        //             repository: "${RELEASE_REPO}",
        //             credentialsId: "${NEXUS_LOGIN}",
        //             artifacts: [
        //                 [artifactId: 'vproapp',
        //                  classifier: '',
        //                  file: 'target/vprofile-v2.war',
        //                  type: 'war']
        //             ]
        //         )
        //     }
        //     post{
        //         always {
        //             echo 'Slack Notification.'
        //             slackSend channel: "#ci-with-jenkins",
        //                       color: COLOR_MAP[currentBuild.currentResult],
        //                       message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}"
        //         }
        //     }
        // }
        stage('Build App Image'){
            steps {
                script {
                    dockerImage = docker.build(appRegistry + ":$BUILD_NUMBER", "./Docker-files/app/")
                }
            }
        }
        stage('Upload App Image'){
            steps{
                script{
                    docker.withRegistry(vprofileRegistry, registryCredential){
                        dockerImage.push("$BUILD_NUMBER")
                        dockerImage.push('latest')
                    }
                }
            }
        }
    }
}